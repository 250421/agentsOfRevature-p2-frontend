/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as publicPublicImport } from './routes/(public)/_public'
import { Route as protectedProtectedImport } from './routes/(protected)/_protected'
import { Route as protectedProtectedIndexImport } from './routes/(protected)/_protected.index'
import { Route as publicPublicSignUpImport } from './routes/(public)/_public.sign-up'
import { Route as publicPublicSignInImport } from './routes/(public)/_public.sign-in'
import { Route as protectedProtectedHeroselectImport } from './routes/(protected)/_protected.heroselect'
import { Route as protectedProtectedGameChapterIdImport } from './routes/(protected)/_protected.game.$chapterId'

// Create Virtual Routes

const publicImport = createFileRoute('/(public)')()
const protectedImport = createFileRoute('/(protected)')()

// Create/Update Routes

const publicRoute = publicImport.update({
  id: '/(public)',
  getParentRoute: () => rootRoute,
} as any)

const protectedRoute = protectedImport.update({
  id: '/(protected)',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const publicPublicRoute = publicPublicImport.update({
  id: '/_public',
  getParentRoute: () => publicRoute,
} as any)

const protectedProtectedRoute = protectedProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => protectedRoute,
} as any)

const protectedProtectedIndexRoute = protectedProtectedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => protectedProtectedRoute,
} as any)

const publicPublicSignUpRoute = publicPublicSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => publicPublicRoute,
} as any)

const publicPublicSignInRoute = publicPublicSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => publicPublicRoute,
} as any)

const protectedProtectedHeroselectRoute =
  protectedProtectedHeroselectImport.update({
    id: '/heroselect',
    path: '/heroselect',
    getParentRoute: () => protectedProtectedRoute,
  } as any)

const protectedProtectedGameChapterIdRoute =
  protectedProtectedGameChapterIdImport.update({
    id: '/game/$chapterId',
    path: '/game/$chapterId',
    getParentRoute: () => protectedProtectedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/(protected)': {
      id: '/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/_protected': {
      id: '/(protected)/_protected'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedProtectedImport
      parentRoute: typeof protectedRoute
    }
    '/(public)': {
      id: '/(public)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicImport
      parentRoute: typeof rootRoute
    }
    '/(public)/_public': {
      id: '/(public)/_public'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicPublicImport
      parentRoute: typeof publicRoute
    }
    '/(protected)/_protected/heroselect': {
      id: '/(protected)/_protected/heroselect'
      path: '/heroselect'
      fullPath: '/heroselect'
      preLoaderRoute: typeof protectedProtectedHeroselectImport
      parentRoute: typeof protectedProtectedImport
    }
    '/(public)/_public/sign-in': {
      id: '/(public)/_public/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof publicPublicSignInImport
      parentRoute: typeof publicPublicImport
    }
    '/(public)/_public/sign-up': {
      id: '/(public)/_public/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof publicPublicSignUpImport
      parentRoute: typeof publicPublicImport
    }
    '/(protected)/_protected/': {
      id: '/(protected)/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedProtectedIndexImport
      parentRoute: typeof protectedProtectedImport
    }
    '/(protected)/_protected/game/$chapterId': {
      id: '/(protected)/_protected/game/$chapterId'
      path: '/game/$chapterId'
      fullPath: '/game/$chapterId'
      preLoaderRoute: typeof protectedProtectedGameChapterIdImport
      parentRoute: typeof protectedProtectedImport
    }
  }
}

// Create and export the route tree

interface protectedProtectedRouteChildren {
  protectedProtectedHeroselectRoute: typeof protectedProtectedHeroselectRoute
  protectedProtectedIndexRoute: typeof protectedProtectedIndexRoute
  protectedProtectedGameChapterIdRoute: typeof protectedProtectedGameChapterIdRoute
}

const protectedProtectedRouteChildren: protectedProtectedRouteChildren = {
  protectedProtectedHeroselectRoute: protectedProtectedHeroselectRoute,
  protectedProtectedIndexRoute: protectedProtectedIndexRoute,
  protectedProtectedGameChapterIdRoute: protectedProtectedGameChapterIdRoute,
}

const protectedProtectedRouteWithChildren =
  protectedProtectedRoute._addFileChildren(protectedProtectedRouteChildren)

interface protectedRouteChildren {
  protectedProtectedRoute: typeof protectedProtectedRouteWithChildren
}

const protectedRouteChildren: protectedRouteChildren = {
  protectedProtectedRoute: protectedProtectedRouteWithChildren,
}

const protectedRouteWithChildren = protectedRoute._addFileChildren(
  protectedRouteChildren,
)

interface publicPublicRouteChildren {
  publicPublicSignInRoute: typeof publicPublicSignInRoute
  publicPublicSignUpRoute: typeof publicPublicSignUpRoute
}

const publicPublicRouteChildren: publicPublicRouteChildren = {
  publicPublicSignInRoute: publicPublicSignInRoute,
  publicPublicSignUpRoute: publicPublicSignUpRoute,
}

const publicPublicRouteWithChildren = publicPublicRoute._addFileChildren(
  publicPublicRouteChildren,
)

interface publicRouteChildren {
  publicPublicRoute: typeof publicPublicRouteWithChildren
}

const publicRouteChildren: publicRouteChildren = {
  publicPublicRoute: publicPublicRouteWithChildren,
}

const publicRouteWithChildren =
  publicRoute._addFileChildren(publicRouteChildren)

export interface FileRoutesByFullPath {
  '/profile': typeof ProfileRoute
  '/': typeof protectedProtectedIndexRoute
  '/heroselect': typeof protectedProtectedHeroselectRoute
  '/sign-in': typeof publicPublicSignInRoute
  '/sign-up': typeof publicPublicSignUpRoute
  '/game/$chapterId': typeof protectedProtectedGameChapterIdRoute
}

export interface FileRoutesByTo {
  '/profile': typeof ProfileRoute
  '/': typeof protectedProtectedIndexRoute
  '/heroselect': typeof protectedProtectedHeroselectRoute
  '/sign-in': typeof publicPublicSignInRoute
  '/sign-up': typeof publicPublicSignUpRoute
  '/game/$chapterId': typeof protectedProtectedGameChapterIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/profile': typeof ProfileRoute
  '/(protected)': typeof protectedRouteWithChildren
  '/(protected)/_protected': typeof protectedProtectedRouteWithChildren
  '/(public)': typeof publicRouteWithChildren
  '/(public)/_public': typeof publicPublicRouteWithChildren
  '/(protected)/_protected/heroselect': typeof protectedProtectedHeroselectRoute
  '/(public)/_public/sign-in': typeof publicPublicSignInRoute
  '/(public)/_public/sign-up': typeof publicPublicSignUpRoute
  '/(protected)/_protected/': typeof protectedProtectedIndexRoute
  '/(protected)/_protected/game/$chapterId': typeof protectedProtectedGameChapterIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/profile'
    | '/'
    | '/heroselect'
    | '/sign-in'
    | '/sign-up'
    | '/game/$chapterId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/profile'
    | '/'
    | '/heroselect'
    | '/sign-in'
    | '/sign-up'
    | '/game/$chapterId'
  id:
    | '__root__'
    | '/profile'
    | '/(protected)'
    | '/(protected)/_protected'
    | '/(public)'
    | '/(public)/_public'
    | '/(protected)/_protected/heroselect'
    | '/(public)/_public/sign-in'
    | '/(public)/_public/sign-up'
    | '/(protected)/_protected/'
    | '/(protected)/_protected/game/$chapterId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ProfileRoute: typeof ProfileRoute
  protectedRoute: typeof protectedRouteWithChildren
  publicRoute: typeof publicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  ProfileRoute: ProfileRoute,
  protectedRoute: protectedRouteWithChildren,
  publicRoute: publicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/profile",
        "/(protected)",
        "/(public)"
      ]
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/(protected)": {
      "filePath": "(protected)",
      "children": [
        "/(protected)/_protected"
      ]
    },
    "/(protected)/_protected": {
      "filePath": "(protected)/_protected.tsx",
      "parent": "/(protected)",
      "children": [
        "/(protected)/_protected/heroselect",
        "/(protected)/_protected/",
        "/(protected)/_protected/game/$chapterId"
      ]
    },
    "/(public)": {
      "filePath": "(public)",
      "children": [
        "/(public)/_public"
      ]
    },
    "/(public)/_public": {
      "filePath": "(public)/_public.tsx",
      "parent": "/(public)",
      "children": [
        "/(public)/_public/sign-in",
        "/(public)/_public/sign-up"
      ]
    },
    "/(protected)/_protected/heroselect": {
      "filePath": "(protected)/_protected.heroselect.tsx",
      "parent": "/(protected)/_protected"
    },
    "/(public)/_public/sign-in": {
      "filePath": "(public)/_public.sign-in.tsx",
      "parent": "/(public)/_public"
    },
    "/(public)/_public/sign-up": {
      "filePath": "(public)/_public.sign-up.tsx",
      "parent": "/(public)/_public"
    },
    "/(protected)/_protected/": {
      "filePath": "(protected)/_protected.index.tsx",
      "parent": "/(protected)/_protected"
    },
    "/(protected)/_protected/game/$chapterId": {
      "filePath": "(protected)/_protected.game.$chapterId.tsx",
      "parent": "/(protected)/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
